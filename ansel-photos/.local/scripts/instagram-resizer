#!/usr/bin/env sh

# Produces correctly cropped Instagram photos in the current working directory
# (non-destructive)

if ! command -v magick &> /dev/null; then
    echo 'Error: ImageMagick is not installed.'
    exit 1
fi

if ! command -v exiv2 &> /dev/null; then
    echo 'Error: Exiv2 is not installed.'
    exit 1
fi

size="$1"

shift 1

case "$size" in
    square)
        width=1080
        height=$width
        ;;
    landscape)
        width=1080
        height=810
        ;;
    portrait)
        width=1080
        height=1350
        ;;
    *)
        echo 'Error: Instagram post size can be square, landscape, or portrait:

square      1:1   1080x1080
landscape   4:3   1080x810
portrait    3:4   1080x1440

Width of 1080 pixels and aspect ratio between 1.91:1 and 4:5.

https://help.instagram.com/1631821640426723

Usage: ./instagram-resizer <size> <input_image_1> <input_image_2> ...'
        exit 1
        ;;
esac

border_color=#ffffff

if [ "$width" -ge "$height" ]; then
    min_border=$((7 * (width / 100)))
else
    min_border=$((7 * (height / 100)))
fi

watermark() {
    echo "@photatogo  $(date '+%Y%m%d')  $(uuidgen)"
}

hex=${border_color#\#}
r=$((16#${hex:0:2}))
g=$((16#${hex:2:2}))
b=$((16#${hex:4:2}))
luminance=$(( (r * 2126 + g * 7152 + b * 722) / 10000 ))
if [ "$luminance" -gt 128 ]; then
    watermark_color=black
else
    watermark_color=white
fi

case "$(uname -s)" in
    Linux)
        watermark_font="$HOME/.local/share/fonts/UbuntuMonoNerdFontMono-Regular.ttf"
        ;;
    Darwin)
        watermark_font="$HOME/Library/Fonts/UbuntuMonoNerdFontMono-Regular.ttf"
        ;;
    *)
        echo 'Error: Operating system not supported.'
        exit 1
        ;;
esac

for input_file in "$@"; do

    file_name=$(basename "$input_file")
    dest_file="./${file_name%.*}_$(echo "$size" | tr '[a-z]' '[A-Z]').${file_name##*.}"

    if [ -e "$dest_file" ]; then
        echo "Error: File or directory already exists. $dest_file"
        exit 1
    fi

    magick "$input_file" \
        -resize $((width - min_border * 2))x$((height - min_border * 2))\> -background "$border_color" -gravity center -extent "${width}x${height}" \
        -rotate 90 -gravity southwest -font "$watermark_font" -pointsize "$((height / 36))" -stroke "$watermark_color" -fill "$watermark_color" -strokewidth "$((width / 1080))" -annotate "+$((width / 108))+$((width / 108))" "$(watermark)" -rotate 270 \
        "$dest_file" && exiv2 rm "$dest_file" || exit 1
done
